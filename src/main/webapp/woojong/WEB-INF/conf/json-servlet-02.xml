<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

  <!-- JSON 텍스트 데이터를 리턴하는 페이지 컨트롤러 객체를 준비한다.
  -->
  <context:component-scan base-package="bitcamp.java89.ems2.control.json"/>

  <!-- MVC 관련 애노테이션을 처리할 수 있는 객체를 등록한다. -->
  <mvc:annotation-driven/>

  <!--  뷰 컴포넌트 관리자(View Resolver; 뷰 해결사) 등록
    => 요청 핸들러가 리턴하는 객체를 JSON 문자열로 자동 변환시키는 뷰리졸버 등록
   -->
  <!-- mvc:view-resolvers 태그를 사용할 수 있다 -->
  <mvc:view-resolvers>
    <mvc:content-negotiation>
        <mvc:default-views>
            <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
        </mvc:default-views>
    </mvc:content-negotiation>
    <mvc:jsp/>
  </mvc:view-resolvers>
  
  <!-- 멀티파트 요청 데이터를 처리하는 객체 등록 
   => 이 객체는 Apache의 commons-fileupload 라이브러리를 사용한다.
      따라서 commons-fileupload 라이브러리를 추가해야 한다.
  -->
  <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="5000000"/>
  </bean>
  
  <!-- 인터셉터 등록 -->
  <!--  
  <mvc:interceptors>
    <mvc:interceptor>
        <mvc:mapping path="/**"/>
        <mvc:exclude-mapping path="/auth/**"/>
        <bean class="bitcamp.java89.ems2.interceptor.LoginCheckInterceptor"/>
    </mvc:interceptor>
  </mvc:interceptors>
  -->
</beans>










